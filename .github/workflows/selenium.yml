name: Run Selenium Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      selenium:
        image: selenium/standalone-chrome:4.11.0  # Фиксируем версию
        ports:
          - 4444:4444
        options: --shm-size=2g --health-cmd "curl -f http://localhost:4444/wd/hub/status || exit 1" --health-interval 5s --health-timeout 10s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-xdist  # Для параллельного запуска тестов

      - name: Wait for Selenium to be ready
        run: |
          echo "Waiting for Selenium..."
          timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://selenium:4444/wd/hub/status)" != "200" ]]; do sleep 1; done' || false
          echo "Selenium is ready!"

      - name: Run selenium tests with retries
        run: |
          pytest tests \
            --junit-xml=reports/results.xml \
            --reruns 2 \  # Повторные попытки для flaky-тестов
            --reruns-delay 5 \
            -n auto  # Параллельный запуск
        env:
          SELENIUM_URL: "http://selenium:4444/wd/hub"
          SELENIUM_OPTS: "--no-sandbox --disable-dev-shm-usage --disable-gpu --window-size=1920,1080"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: reports/results.xml

      - name: Send Test Results to TestIt
        if: success() || failure()  # Отправляем результаты в любом случае
        run: |
          testit results import \
            --url "https://team-au3z.testit.software/" \
            --token "${{ secrets.TMS_TOKEN }}" \
            --project-id "b5d28c1d-ac5f-46a4-886a-328edaba54b5" \
            --configuration-id "08c50d72-36a8-4493-87b7-f4455fc7541b" \
            --results "reports" \
            --testrun-name "Pytest test run"
        env:
          TMS_TOKEN: ${{ secrets.TMS_TOKEN }}